'use strict'

// No action
task('no_action')

// Action setted later
const actionLater = task('action_later')
actionLater.action = function() {
  return 'complete'
}

task('task_fail', function() {
  this.fail( 'fail' )
})

// Execute tasks in serie
task('task_sync', function() {
  return this.path+':complete'
})

task('task_async', { async: true }, function() {
  const scope = this

  setTimeout(function() {
    scope.complete(scope.path+':complete')
  }, 500)

  return this.path+':incomplete'
})


task('serie0', [ 'task_sync', 'task_async' ], function() {
  return this.path+':complete'
})

task('task_sync_async', { async: false }, function() {
  const scope = this

  setTimeout(function() {
    scope.complete(scope.path+':complete')
  }, 2000)

  return this.path+':incomplete'
})

task('parallel0', [ 'task_sync', 'task_async', 'task_sync_async' ], { preReqSequence: 'parallel' }, function() {
  return this.path+':complete'
})

task('task_param', function( name ) {
  name = name || this.argv.who
  return "Hello "+name+"!"
})




// Hook
namespace('hook', function() {

  task('task0', function() {
    return this.path
  })

  task('pretask0', function() {
    return this.path
  })

  task('posttask0', function() {
    return this.path
  })

})
